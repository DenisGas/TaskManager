@using TaskManager.Data.Models
@model TaskManager.Models.HomeViewModel

@{
    ViewData["Title"] = "Домашня сторінка";
}

<style>
    .text-truncate {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .line-clamp {
        display: -webkit-box;
        -webkit-line-clamp: 2; 
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>

<div class="container">
    <div class="text-center">
        <h1 class="display-4">Ласкаво просимо</h1>
        <p>Час на сервері: @DateTime.Now</p>
    </div>
</div>

@if (Model.Last10Tasks.Any() || Model.TasksForToday.Any())
{
<div class="row">
    <div class="col-md-8">
        <div class="table-responsive">
            <h2>Останні 10 завдань</h2>
            <table class="table">
                <thead>
                    <tr>
                        <th>Назва</th>
                        <th>Дата</th>
                        <th>Пріоритет</th>
                        <th>Статус</th>
                            <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var task in Model.Last10Tasks)
                    {
                        <tr class="@GetPriorityColor(task.Priority)">
                            <td style="color : @GetTextColor(task.Priority)">@task.Title</td>
                            <td style="color : @GetTextColor(task.Priority)">@task.DueDate.ToShortDateString()</td>
                            <td style="color : @GetTextColor(task.Priority)">@task.Priority</td>
                                <td>
                                    <form method="post">
                                        @Html.AntiForgeryToken()
                                        <input type="checkbox" class="form-check-input" name="isCompleted" @(task.IsCompleted ? "checked" : "") onchange="updateTaskStatus(@task.Id, this.checked)">
                                    </form>
                                </td>

                            <td>
                                <a href="@Url.Action("Details", "Tasks", new { id = task.Id })" class="btn btn-@GetButtonColor(task.Priority)">Детальніше</a>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="col-md-4">
        @if (Model.TasksForToday.Any())
        {
            <h2>Завдання на сьогодні</h2>
            @foreach (var task in Model.TasksForToday)
            {
                <div class="card @GetPriorityColor(task.Priority) mb-3">
                    <div class="card-body">
                            <div class="d-flex align-items-center mb-2">
                                <form method="post">
                                    @Html.AntiForgeryToken()
                                    <input type="checkbox" class="form-check-input" name="isCompleted" @(task.IsCompleted ? "checked" : "") onchange="updateTaskStatus(@task.Id, this.checked)">
                                </form>
                                <h5 class="card-title mb-0 me-2 text-truncate flex-grow-1 color : @GetTextColor(task.Priority)" style="margin-left: 10px;">@task.Title</h5>
                            </div>
                        <p class="card-text mb-1 text-truncate color : @GetTextColor(task.Priority)">Дата: @task.DueDate.ToShortDateString()</p>
                        <p class="card-text mb-1 text-truncate color : @GetTextColor(task.Priority)">Пріоритет: @task.Priority</p>
                        <a href="@Url.Action("Details", "Tasks", new { id = task.Id })" class="btn btn-@GetButtonColor(task.Priority) ">Детальніше</a>
                    </div>
                </div>
            }
        }
        else
        {
            <p>Завдань на сьогодні немає.</p>
        }
    </div>
</div>
}
else
{
    <div class="text-center mt-5">
        <p>Наразі немає жодних активних завдань.</p>
        <a asp-controller="Tasks" asp-action="Create" class="btn btn-success">Створити нове завдання</a>
    </div>
}

@functions {
    string GetPriorityColor(PriorityLevel priority)
    {
        switch (priority)
        {
            case PriorityLevel.High:
                return "bg-danger";
            case PriorityLevel.Medium:
                return "bg-warning";
            case PriorityLevel.Low:
                return "bg-info";
            default:
                return "bg-light";
        }
    }

    string GetButtonColor(PriorityLevel priority)
    {
        switch (priority)
        {
            case PriorityLevel.High:
                return "outline-light";
            case PriorityLevel.Medium:
                return "outline-dark";
            case PriorityLevel.Low:
                return "outline-dark";
            default:
                return "outline-primary";
        }
    }

    string GetTextColor(PriorityLevel priority)
    {
        switch (priority)
        {
            case PriorityLevel.High:
                return "white";
            case PriorityLevel.Medium:
                return "black";
            case PriorityLevel.Low:
                return "black";
            default:
                return "black";
        }
    }
}
    <script>

                    function updateTaskStatus(taskId, isCompleted) {
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        const data = {
            id: taskId,
            isCompleted: isCompleted,
            __RequestVerificationToken: token
        };

        fetch(`/Tasks/UpdateStatus?id=${taskId}&isCompleted=${isCompleted}&returnUrl=${encodeURIComponent(window.location.href)}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        }).then(response => {
            if (!response.ok) {
                alert("Не вдалося оновити статус завдання.");
            } else {
                                window.location.href = response.url;
            }
        }).catch(error => {
            console.error("Помилка:", error);
            alert("Сталася помилка.");
        });
    }



    </script>